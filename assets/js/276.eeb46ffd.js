(window.webpackJsonp=window.webpackJsonp||[]).push([[276],{739:function(e,t,i){"use strict";i.r(t);var r=i(1),a=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"论文整理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#论文整理"}},[e._v("#")]),e._v(" 论文整理")]),e._v(" "),t("ul",[t("li",[e._v("S - C特征提取的计算机漏洞自动分类算法")]),e._v(" "),t("li",[e._v("VulDetector: Detecting Vulnerabilities Using Weighted Feature Graph Comparison( 使用加权特征图比较检测漏洞 )")]),e._v(" "),t("li",[e._v("GRAPHCODEBERT: PRE-TRAINING CODE REPRESEN-TATIONS WITH DATA FLOW(具有数据流的预训练代码表示)")]),e._v(" "),t("li",[e._v("Software Vulnerability Detection Using Deep Neural Networks: A Survey( 基于深度神经网络的软件漏洞检测 )")]),e._v(" "),t("li",[e._v("Automated Vulnerability Detection in Source Code Using Deep Representation Learning( 使用深度表示学习的源代码中的自动漏洞检测 )")]),e._v(" "),t("li",[e._v("Neural Network-based Graph Embedding for Cross-Platform Binary Code Similarity Detection( 基于神经网络的图嵌入跨平台二进制代码相似性检测 )")]),e._v(" "),t("li",[e._v("CodeBERT:A Pre-Trained Model for Programming and Natural Languages( 一种用于编程和自然语言的预训练模型 )")]),e._v(" "),t("li",[e._v("问题：\n"),t("ul",[t("li",[e._v("中间代码是否有统一的规则，结果输出来靠什么判断")]),e._v(" "),t("li",[e._v("GNN的网络结构模型")])])])])])}),[],!1,null,null,null);t.default=a.exports}}]);