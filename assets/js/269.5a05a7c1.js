(window.webpackJsonp=window.webpackJsonp||[]).push([[269],{729:function(t,e,a){"use strict";a.r(e);var s=a(1),n=Object(s.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h3",{attrs:{id:"absract"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#absract"}},[this._v("#")]),this._v(" Absract")]),this._v(" "),t("p",[this._v("尽管基于机器学习和深度学习的漏洞检测研究方法已经非常普遍了，但现有的研究方法大部分只是根据给定的代码片段，来判断是否包含漏洞（二分类或多分类），而并没有具体指出哪些statement有问题。本文提出了IVDetect方法，使用PDG程序依赖图对代码进行表示，并从中提取信息作为代码的向量表征，使用FA-GCN（Graph Convolution Network with feature-attention）网络对向量表征进行分类。此外，本文还用可解释方法GNNExplainer对FA-GCN的分类结果进行解释，基于edge-mask对PDG图选取子图进行解释，以此找出是哪些statement决定了分类的结果，也就是说哪些statement存在问题。本文在Fan、Reveal、FFMPeg+Qemu数据集上进行实验，实验结果证明了IVDetect漏洞检测模型的有效性，以及漏洞解释定位语句的准确性")])])}),[],!1,null,null,null);e.default=n.exports}}]);