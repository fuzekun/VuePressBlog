(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{523:function(a,e,n){"use strict";n.r(e);var s=n(1),t=Object(s.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h3",{attrs:{id:"_1、工厂模式解耦"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、工厂模式解耦"}},[a._v("#")]),a._v(" 1、工厂模式解耦")]),a._v(" "),e("p",[a._v("第一步：创建bean.properties配置文件：把将来需要通过反射机制创建的业务层bean对象service和持久层对象dao的全限定类名以key-value的形式写入到配置文件中；")]),a._v(" "),e("p",[a._v("第二步：创建BeanFactory类实现工厂模式解耦：")]),a._v(" "),e("p",[a._v("工厂模式创建完bean之后，将所有的bean都保存到Map集合中，而我们获取bean的时候只需要根据bean的名称作为get的参数进行调用即可；")]),a._v(" "),e("h3",{attrs:{id:"_2、bean创建的三中方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、bean创建的三中方式"}},[a._v("#")]),a._v(" 2、bean创建的三中方式")]),a._v(" "),e("p",[a._v("第一种：使用默认构造函数创建")]),a._v(" "),e("p",[a._v("第二种：使用实例工厂模式创建，此时需要将该工厂对象先实例化，才能调用该对象的成员方法来创建我们需要的bean对象；")]),a._v(" "),e("p",[a._v("第三种：使用静态工厂中的静态方法创建对象，因为获取我们需要的bean对象的方法是静态方法，所以我们不需要实例化静态工厂就可以直接通过静态工厂的类名来调用该静态方法。")]),a._v(" "),e("h3",{attrs:{id:"_3、bean的作用范围"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、bean的作用范围"}},[a._v("#")]),a._v(" 3、bean的作用范围")]),a._v(" "),e("p",[a._v("bean标签的scope属性用于指定bean的作用范围：")]),a._v(" "),e("p",[a._v("Singleton：单例的（默认的）")]),a._v(" "),e("p",[a._v("prototype：多例的")]),a._v(" "),e("p",[a._v("request：作用于web应用的请求范围")]),a._v(" "),e("p",[a._v("session：作用于web应用的会话范围")]),a._v(" "),e("p",[a._v("global-session：作用于集群环境的会话范围")]),a._v(" "),e("h3",{attrs:{id:"_4、bean的生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、bean的生命周期"}},[a._v("#")]),a._v(" 4、bean的生命周期")]),a._v(" "),e("ul",[e("li",[a._v("单例对象：")])]),a._v(" "),e("p",[a._v("出生：当容器创建时，对象出生")]),a._v(" "),e("p",[a._v("活着：只要容器还在，对象一直活着")]),a._v(" "),e("p",[a._v("死亡：容器销毁，对象消亡")]),a._v(" "),e("p",[a._v("总结：单例对象的生命周期与容器的相同")]),a._v(" "),e("ul",[e("li",[a._v("多例对象：")])]),a._v(" "),e("p",[a._v("出生：当我们使用对象时，Spring框架为我们创建；")]),a._v(" "),e("p",[a._v("活着：对象在使用过程中一直存活；")]),a._v(" "),e("p",[a._v("死亡：当对象长时间不用且没有别的对象引用时，由Java的垃圾回收机制进行回收。")]),a._v(" "),e("h3",{attrs:{id:"_5、-bean的意思"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、-bean的意思"}},[a._v("#")]),a._v(" 5、@Bean的意思")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("@Bean\npublic MyBean myBean() {\n    // instantiate and configure MyBean obj\n    return obj;\n}\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("p",[a._v("意思是@Bean明确地指示了一种方法，什么方法呢——产生一个bean的方法，并且交给Spring容器管理；从这我们就明白了为啥@Bean是放在方法的注释上了，因为它很明确地告诉被注释的方法，你给我产生一个Bean，然后交给Spring容器。")])])}),[],!1,null,null,null);e.default=t.exports}}]);