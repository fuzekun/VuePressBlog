(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{649:function(t,l,n){"use strict";n.r(l);var o=n(1),s=Object(o.a)({},(function(){var t=this,l=t._self._c;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("ol",[l("li",[t._v("锁机制：包括互斥锁、条件变量、读写锁")])]),t._v(" "),l("p",[t._v("a. 互斥锁提供了以排他方式防止数据结构被并发修改的方法；")]),t._v(" "),l("p",[t._v("b. 读写锁允许多个线程同时读共享数据，而对写操作是互斥的；")]),t._v(" "),l("p",[t._v("c. 条件变量可以以原子的方式阻塞进程，直到某个特定的条件为真。对条件的测试是在互斥锁的保护下进行的。条件变量始终与互斥锁一起使用；")]),t._v(" "),l("ol",{attrs:{start:"2"}},[l("li",[l("p",[t._v("信号量机制（Semaphore）：包括无名线程信号量和命名线程信号量")])]),t._v(" "),l("li",[l("p",[t._v("信号机制（Singal）：类似进程间的信号处理，线程间的通信目的，主要是用于线程同步，所以线程没有像进程通信中的数据交换的通信机制。")])])])])}),[],!1,null,null,null);l.default=s.exports}}]);