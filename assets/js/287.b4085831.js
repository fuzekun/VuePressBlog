(window.webpackJsonp=window.webpackJsonp||[]).push([[287],{747:function(v,_,p){"use strict";p.r(_);var a=p(1),r=Object(a.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"阿里妈妈"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#阿里妈妈"}},[v._v("#")]),v._v(" 阿里妈妈")]),v._v(" "),_("p",[v._v("1、mysql中myism和innodb的区别")]),v._v(" "),_("p",[v._v("myisam不支持事务，innodb支持事务")]),v._v(" "),_("p",[v._v("myisam只支持表锁，innodb支持表锁和行锁")]),v._v(" "),_("p",[v._v("myisam支持全文检索，innodb不支持全文检索")]),v._v(" "),_("p",[v._v("2、聚簇索引和非聚簇索引区别")]),v._v(" "),_("p",[v._v("聚簇索引：将数据存储与索引放到了一块，索引结构的叶子节点保存了行数据")]),v._v(" "),_("p",[v._v("非聚簇索引：将数据与索引分开存储，索引结构的叶子节点指向了数据对应的位置")]),v._v(" "),_("p",[v._v("3、jvm内存模型以及程序运行时，它们是怎么一个过程")]),v._v(" "),_("p",[v._v("方法区")]),v._v(" "),_("p",[v._v("程序计数器")]),v._v(" "),_("p",[v._v("堆")]),v._v(" "),_("p",[v._v("本地方法栈")]),v._v(" "),_("p",[v._v("虚拟机栈")]),v._v(" "),_("p",[v._v("4、"),_("strong",[v._v("jvm跨代引用是如何处理的 （不会）")])]),v._v(" "),_("p",[v._v("5、双亲委派机制的优点")]),v._v(" "),_("p",[v._v("6、消息中间件里的消息重复、乱序、丢失，请从生产者和消费者的角度去谈一谈")]),v._v(" "),_("p",[v._v("可以看出，保证消息的可靠性需要三方配合。")]),v._v(" "),_("p",[v._v("生产者需要处理好Broker的响应，出错情况下利用重试、报警等手段。")]),v._v(" "),_("p",[v._v("Broker需要控制响应的时机，单机情况下是消息刷盘后返回响应，集群多副本情况下，即发送至两个副本及以上的情况下再返回响应。")]),v._v(" "),_("p",[v._v("消费者需要在执行完真正的业务逻辑之后再返回响应给Broker。")]),v._v(" "),_("p",[v._v("但是要注意消息可靠性增强了，性能就下降了，等待消息刷盘、多副本同步后返回都会影响性能。因此还是看业务，例如日志的传输可能丢那么一两条关系不大，因此没必要等消息刷盘再响应。")]),v._v(" "),_("p",[v._v("如果处理重复消息")]),v._v(" "),_("p",[v._v("我们先来看看能不能避免消息的重复。")]),v._v(" "),_("p",[v._v("假设我们发送消息，就管发，不管Broker的响应，那么我们发往Broker是不会重复的。")]),v._v(" "),_("p",[v._v("但是一般情况我们是不允许这样的，这样消息就完全不可靠了，我们的基本需求是消息至少得发到Broker上，那就得等Broker的响应，那么就可能存在Broker已经写入了，当时响应由于网络原因生产者没有收到，然后生产者又重发了一次，此时消息就重复了。")]),v._v(" "),_("p",[v._v("再看消费者消费的时候，假设我们消费者拿到消息消费了，业务逻辑已经走完了，事务提交了，此时需要更新Consumer offset了，然后这个消费者挂了，另一个消费者顶上，此时Consumer offset还没更新，于是又拿到刚才那条消息，业务又被执行了一遍。于是消息又重复了。")]),v._v(" "),_("p",[v._v("可以看到正常业务而言消息重复是不可避免的，因此我们只能从另一个角度来解决重复消息的问题。")]),v._v(" "),_("p",[v._v("关键点就是幂等。既然我们不能防止重复消息的产生，那么我们只能在业务上处理重复消息所带来的影响。")]),v._v(" "),_("p",[v._v("幂等处理重复消息")]),v._v(" "),_("p",[v._v("幂等是数学上的概念，我们就理解为同样的参数多次调用同一个接口和调用一次产生的结果是一致的。")]),v._v(" "),_("p",[v._v("例如这条 SQLupdate t1 set money = 150 where id = 1 and money = 100; 执行多少遍money都是150，这就叫幂等。")]),v._v(" "),_("p",[v._v("因此需要改造业务处理逻辑，使得在重复消息的情况下也不会影响最终的结果。")]),v._v(" "),_("p",[v._v("可以通过上面我那条 SQL 一样，做了个前置条件判断，即money = 100情况，并且直接修改，更通用的是做个version即版本号控制，对比消息中的版本号和数据库中的版本号。")]),v._v(" "),_("p",[v._v("或者通过数据库的约束例如唯一键，例如insert into update on duplicate key...。")]),v._v(" "),_("p",[v._v("或者记录关键的key，比如处理订单这种，记录订单ID，假如有重复的消息过来，先判断下这个ID是否已经被处理过了，如果没处理再进行下一步。当然也可以用全局唯一ID等等。")]),v._v(" "),_("p",[v._v("基本上就这么几个套路，真正应用到实际中还是得看具体业务细节。")]),v._v(" "),_("p",[v._v("如何保证消息的有序性")]),v._v(" "),_("p",[v._v("有序性分：全局有序和部分有序。")]),v._v(" "),_("p",[v._v("全局有序")]),v._v(" "),_("p",[v._v("如果要保证消息的全局有序，首先只能由一个生产者往Topic发送消息，并且一个Topic内部只能有一个队列（分区）。消费者也必须是单线程消费这个队列。这样的消息就是全局有序的！")]),v._v(" "),_("p",[v._v("不过一般情况下我们都不需要全局有序，即使是同步MySQL Binlog也只需要保证单表消息有序即可。")]),v._v(" "),_("p",[v._v("部分有序")]),v._v(" "),_("p",[v._v("因此绝大部分的有序需求是部分有序，部分有序我们就可以将Topic内部划分成我们需要的队列数，把消息通过特定的策略发往固定的队列中，然后每个队列对应一个单线程处理的消费者。这样即完成了部分有序的需求，又可以通过队列数量的并发来提高消息处理效率。")]),v._v(" "),_("p",[v._v("图中我画了多个生产者，一个生产者也可以，只要同类消息发往指定的队列即可。")]),v._v(" "),_("p",[v._v("如果处理消息堆积")]),v._v(" "),_("p",[v._v("消息的堆积往往是因为生产者的生产速度与消费者的消费速度不匹配。有可能是因为消息消费失败反复重试造成的，也有可能就是消费者消费能力弱，渐渐地消息就积压了。")]),v._v(" "),_("p",[v._v("因此我们需要先定位消费慢的原因，如果是bug则处理 bug ，如果是因为本身消费能力较弱，我们可以优化下消费逻辑，比如之前是一条一条消息消费处理的，这次我们批量处理，比如数据库的插入，一条一条插和批量插效率是不一样的。")]),v._v(" "),_("p",[v._v("假如逻辑我们已经都优化了，但还是慢，那就得考虑水平扩容了，增加Topic的队列数和消费者数量，注意队列数一定要增加，不然新增加的消费者是没东西消费的。一个Topic中，一个队列只会分配给一个消费者。")]),v._v(" "),_("p",[v._v("当然你消费者内部是单线程还是多线程消费那看具体场景。不过要注意上面提高的消息丢失的问题，如果你是将接受到的消息写入内存队列之后，然后就返回响应给Broker，然后多线程向内存队列消费消息，假设此时消费者宕机了，内存队列里面还未消费的消息也就丢了")]),v._v(" "),_("p",[v._v("7、k8s的设计理念，源码是否看过，谈一谈这样架构的好处")]),v._v(" "),_("p",[v._v("8、程序计数器是如何工作的")]),v._v(" "),_("p",[v._v("9、volatile是干啥的？其中线")]),v._v(" "),_("p",[v._v("10、结合类加载和jvm内存模型说一下整个过程")]),v._v(" "),_("p",[v._v("11、了解那些数据库的索引数据结构？分别说说有什么好处？")]),v._v(" "),_("p",[v._v("12、微服务拆分的原则？优缺点？")]),v._v(" "),_("p",[v._v("13、启动三个线程实现顺序打印abc")]),v._v(" "),_("p",[v._v("14、动态代理的原理")]),v._v(" "),_("p",[v._v("15、容器了解多少？为什么k8s的设计里有pod，而不是直接用容器？")]),v._v(" "),_("p",[v._v("16、高并发场景下，有10台机器正在工作，其中有一台机器重启之后cpu load特别大，请从各个角度分析一下该现象出现的原因")]),v._v(" "),_("p",[v._v("17、如何用AQS实现一个锁")]),v._v(" "),_("h2",{attrs:{id:"阿里-新零售-java"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#阿里-新零售-java"}},[v._v("#")]),v._v(" 阿里-新零售-Java")]),v._v(" "),_("p",[_("strong",[v._v("阿里巴巴一面（55分钟）")])]),v._v(" "),_("p",[v._v("先介绍一下自己吧")]),v._v(" "),_("p",[v._v("说一下自己的优缺点")]),v._v(" "),_("p",[v._v("具体讲一下之前做过的项目")]),v._v(" "),_("p",[v._v("你觉得项目里给里最大的挑战是什么？")]),v._v(" "),_("p",[v._v("Hashmap为什么不用平衡树？")]),v._v(" "),_("p",[v._v("AQS知道吗？知道哪一些呢？讲一讲。")]),v._v(" "),_("p",[v._v("CLH同步队列是怎么实现非公平和公平的？")]),v._v(" "),_("p",[v._v("ReetrantLock和synchronized的区别")]),v._v(" "),_("p",[v._v("讲一下JVM的内存结构")]),v._v(" "),_("p",[v._v("JVM 里 new 对象时，堆会发生抢占吗？你是怎么去设计JVM的堆的线程安全的？")]),v._v(" "),_("p",[v._v("讲一下redis的数据结构")]),v._v(" "),_("p",[v._v("redis缓存同步问题")]),v._v(" "),_("p",[v._v("讲一讲MySQL的索引结构")]),v._v(" "),_("p",[v._v("你有什么问题要问我吗？")]),v._v(" "),_("p",[_("strong",[v._v("阿里巴巴二面（45分钟）")])]),v._v(" "),_("p",[v._v("根据项目问了一些细节问题")]),v._v(" "),_("p",[v._v("说一下HashMap的数据结构")]),v._v(" "),_("p",[v._v("红黑树和AVL树有什么区别？")]),v._v(" "),_("p",[v._v("如何才能得到一个线程安全的HashMap？")]),v._v(" "),_("p",[v._v("讲一下JVM常用垃圾回收期")]),v._v(" "),_("p",[v._v("redis分布式锁")]),v._v(" "),_("p",[v._v("再描述一下你之前的项目吧")]),v._v(" "),_("p",[v._v("你觉得这个项目的亮点在哪里呢？")]),v._v(" "),_("p",[v._v("你设计的数据库遵循的范式？")]),v._v(" "),_("p",[v._v("你有没有问题？")]),v._v(" "),_("p",[_("strong",[v._v("阿里巴巴三面（50分钟）")])]),v._v(" "),_("p",[v._v("又聊项目")]),v._v(" "),_("p",[v._v("在项目中，并发量大的情况下，如何才能够保证数据的一致性？")]),v._v(" "),_("p",[v._v("elasticsearch为什么检索快，它的底层数据结构是怎么样的？")]),v._v(" "),_("p",[v._v("JVM内存模型")]),v._v(" "),_("p",[v._v("netty应用在哪些中间件和框架中呢？")]),v._v(" "),_("p",[v._v("线程池的参数")]),v._v(" "),_("p",[v._v("讲一下B树和B+树的区别")]),v._v(" "),_("p",[v._v("为什么要用redis做缓存？")]),v._v(" "),_("p",[v._v("了解Springboot吗？那讲一下Springboot的启动流程吧")]),v._v(" "),_("p",[v._v("如何解决bean的循环依赖问题？")]),v._v(" "),_("p",[v._v("Java有哪些队列？")]),v._v(" "),_("p",[v._v("讲一讲Spring和Springboot的区别")]),v._v(" "),_("p",[v._v("最近看了什么书？为什么？")]),v._v(" "),_("p",[v._v("你平时是怎么学习Java的呢？")]),v._v(" "),_("h2",{attrs:{id:"阿里-阿里口碑-java"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#阿里-阿里口碑-java"}},[v._v("#")]),v._v(" 阿里-阿里口碑-Java")]),v._v(" "),_("p",[v._v("阿里巴巴一面（38分钟）- 自我介绍")]),v._v(" "),_("p",[v._v("介绍项目, 具体一点")]),v._v(" "),_("p",[v._v("讲一下Redis分布式锁的实现")]),v._v(" "),_("p",[v._v("HashMap了解么吗？说一下put方法过程")]),v._v(" "),_("p",[v._v("HashMap是不是线程安全？")]),v._v(" "),_("p",[v._v("ConcurrentHashMap如何保证线程安全？")]),v._v(" "),_("p",[v._v("数据库索引了解吗？讲一下")]),v._v(" "),_("p",[v._v("常见排序算法")]),v._v(" "),_("p",[v._v("TCP三次握手，四次挥手。")]),v._v(" "),_("p",[v._v("深入问了乐观锁，悲观锁及其实现。")]),v._v(" "),_("p",[_("strong",[v._v("阿里巴巴二面（45分钟）")])]),v._v(" "),_("p",[v._v("自我介绍+项目介绍")]),v._v(" "),_("p",[v._v("你在项目中担任什么样的角色？")]),v._v(" "),_("p",[v._v("那你觉得你比别人的优势在哪里？你用了哪些别人没有的东西吗？")]),v._v(" "),_("p",[v._v("Java怎么加载类？")]),v._v(" "),_("p",[v._v("linux常用命令有哪些？")]),v._v(" "),_("p",[v._v("Spring的IOC, AOP。")]),v._v(" "),_("p",[v._v("讲一下ORM框架Hibernate")]),v._v(" "),_("p",[v._v("设计模式了解吗？讲一下")]),v._v(" "),_("p",[v._v("自己实现一个二阶段提交，如何设计？")]),v._v(" "),_("p",[v._v("你还有什么想问的？")]),v._v(" "),_("p",[_("strong",[v._v("阿里巴巴三面（30分钟）")])]),v._v(" "),_("p",[v._v("说一下自己做的项目")]),v._v(" "),_("p",[v._v("问了一些项目相关的问题")]),v._v(" "),_("p",[v._v("wait()和sleep()的区别")]),v._v(" "),_("p",[v._v("原子变量的实现原理")]),v._v(" "),_("p",[v._v("CAS的问题，讲一下解决方案。")]),v._v(" "),_("p",[v._v("有没有更好的计数器解决策略")]),v._v(" "),_("p",[v._v("讲一讲NIO和BIO的区别")]),v._v(" "),_("p",[v._v("Nginx负载均衡时是如何判断某个节点挂掉了？")]),v._v(" "),_("p",[v._v("讲一下redis的数据类型和使用场景")]),v._v(" "),_("p",[v._v("k8s的储存方式是怎样的？")]),v._v(" "),_("p",[v._v("Spring AOP原理是什么？怎么使用？什么是切点，什么是切面？最好是举个例子")]),v._v(" "),_("p",[v._v("算法题：给一堆硬币的array，返回所有的组合")]),v._v(" "),_("p",[_("strong",[v._v("阿里巴巴总监面（34分钟）")])]),v._v(" "),_("p",[v._v("算法：给一个set打印出所有子集；多线程从多个文件中读入数据，写到同一个文件中；判断ip是否在给定范围内；打乱一副扑克牌，不能用额外空间，证明为什么是随机的。")]),v._v(" "),_("p",[v._v("Tcp和udp区别")]),v._v(" "),_("p",[v._v("线程池的原理以及各种线程池的应用场景")]),v._v(" "),_("p",[v._v("线程池中使用有限的阻塞队列和无限的阻塞队列的区别")]),v._v(" "),_("p",[v._v("如果你发现你的sql语句始终走另一个索引，但是你希望它走你想要的索引，怎么办？")]),v._v(" "),_("p",[v._v("mysql执行计划")]),v._v(" "),_("p",[v._v("数据库索引为什么用b+树？")]),v._v(" "),_("p",[v._v("你在做sql优化主要从哪几个方面做，用到哪些方法工具？")]),v._v(" "),_("p",[v._v("有没有想问的？")]),v._v(" "),_("p",[_("strong",[v._v("阿里巴巴HR面（23分钟）")])]),v._v(" "),_("p",[v._v("自我介绍")]),v._v(" "),_("p",[v._v("平时怎么学习的？")]),v._v(" "),_("p",[v._v("有什么兴趣爱好吗？")]),v._v(" "),_("p",[v._v("怎么看待996？")]),v._v(" "),_("p",[v._v("怎么平衡工作和学习？")]),v._v(" "),_("p",[v._v("有没有什么想问的")]),v._v(" "),_("h2",{attrs:{id:"阿里-阿里云-java"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#阿里-阿里云-java"}},[v._v("#")]),v._v(" 阿里-阿里云-Java")]),v._v(" "),_("p",[v._v("一面：")]),v._v(" "),_("p",[v._v("项目介绍")]),v._v(" "),_("p",[v._v("字符串全排列")]),v._v(" "),_("p",[v._v("线程安全")]),v._v(" "),_("p",[v._v("设计题：设计一个微博系统，给了一个比较大的用户量")]),v._v(" "),_("h3",{attrs:{id:"_2023-02-14"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2023-02-14"}},[v._v("#")]),v._v(" 2023.02.14")]),v._v(" "),_("p",[v._v("阿里面试：")]),v._v(" "),_("p",[v._v("1、浏览器寻址url过程")]),v._v(" "),_("p",[v._v("2、arp表的作用，分组格式和对于主机不存在的arp会发生什么？")]),v._v(" "),_("p",[v._v("3、DNS的作用，DNS的解析流程")]),v._v(" "),_("p",[v._v("4、下一跳路由转发数据包的过程")]),v._v(" "),_("p",[v._v("5、进程，线程和协程 的区别")]),v._v(" "),_("p",[v._v("6、协程切换的时机")])])}),[],!1,null,null,null);_.default=r.exports}}]);